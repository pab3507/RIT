---------------------
--Database Exercise--
---------------------

[Moisés Lora]

-----------------------------------------------------------------------------------------

Part 1

Review all of part 1 and record your estimate in the activity journal.

Open the database musicals.sqlite with sqlite3.

Run the .schema command. What are the three "create table" commands used to create the database tables?

-- SQL COMMANDS TO CREATE TABLES

CREATE TABLE "authors" (
"id" INTEGER PRIMARY KEY  AUTOINCREMENT  NOT NULL ,
"name" VARCHAR
);
CREATE TABLE "authors_musicals" (
"author_id" INTEGER,
"musical_id" INTEGER
);
CREATE TABLE "musicals" (
"id" INTEGER PRIMARY KEY  AUTOINCREMENT  NOT NULL ,
 "title" VARCHAR, "year" INTEGER
);


[Write an SQL select command to produce the titles of all the musicals in the database that were first staged in the 1940s. What was the command? What were the results?]

-- SQL COMMAND

SELECT title 
FROM musicals 
WHERE (musicals.year >= 1940 AND musicals.year <= 1949);

Brigadoon
Oklahoma!
South Pacific
Carousel

Write an SQL select command to produce the titles of all the musicals authored by Oscar Hammerstein. What was the command? What were the results?

-- SQL COMMAND

SELECT title 
FROM musicals 
WHERE id IN (
SELECT musical_id 
FROM authors_musicals 
WHERE author_id = 
(SELECT id 
FROM authors 
WHERE name = "Oscar Hammerstein")
);

Oklahoma!
South Pacific
Carousel
The Sound of Music

Record your process and observations in the activity journal.

End of Part 1

-----------------------------------------------------------------------------------------

Part 2

Review all of part 2 and record your estimate in the activity journal.

From this point forward, you may use either sqlite3 from the command line or the SQL Manager add-on to Firefox

Insert two new musicals, with their authors and the proper linkage. The musicals are:

Music Man	1957	Meredith Wilson
Hello, Dolly!	1964	Jerry Herman
Hello, Dolly!	1964	Michael Steward

What SQL commands were executed to completely insert the information for Music Man?

-- SQL COMMANDS

INSERT INTO authors (name) VALUES ("Meredith Wilson"); 
INSERT INTO musicals (title, year) VALUES ("Music Man", 1957);
INSERT INTO authors_musicals (author_id, musical_id) VALUES ((SELECT id FROM authors WHERE name="Meredith Wilson"), (SELECT id FROM musicals WHERE title="Music Man"));

INSERT INTO authors (name) VALUES ("Jerry Herman"); 
INSERT INTO musicals (title, year) VALUES ("Hello, Dolly!", 1964); 
INSERT INTO authors_musicals (author_id, musical_id) VALUES ((SELECT id FROM authors WHERE name="Jerry Herman"), (SELECT id FROM musicals WHERE title="Hello, Dolly!"));

INSERT INTO authors (name) VALUES ("Michael Steward");
INSERT INTO authors_musicals (author_id, musical_id) VALUES ((SELECT id FROM authors WHERE name="Michael Steward"), (SELECT id FROM musicals WHERE title="Hello, Dolly!"));

Create a new table called Actresses with an auto-increment primary key id (integer) and the actress’s name (a string). Populate the table with the following actresses:
Carol Channing
Pearl Bailey
Shirley Jones
Julie Andrews
Audrey Hepburn

-- CREATING NEW TABLE

CREATE TABLE "Actresses" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL , "name" VARCHAR);

-- POPULATING TABLE

INSERT INTO Actresses (name) VALUES ("Carol Channing"),("Pearl Bailey"),("Shirley Jones"),("Julie Andrews"),("Audrey Hepburn");

Record your process and observations in the activity journal.

End of Part 2

-----------------------------------------------------------------------------------------

Part 3

Review all of part 3 and record your estimate in the activity journal.

Create a new linking table called "actresses_musicals" with two integer keys, actress_id and musical_id, and show the SQL command that was executed.

-- CREATING NEW TABLE

CREATE TABLE "actresses_musicals" ("actress_id" INTEGER,"musical_id" INTEGER);

Set up the following links between actresses and musicals in the actresses_musicals table:

Carol Channing	Hello, Dolly
Pearl Bailey	Hello, Dolly
Shirley Jones	Carousel
Audrey Hepburn	My Fair Lady
Julie Andrews	My Fair Lady
Julie Andrews	The Sound of Music

-- LINKING TABLES

INSERT INTO actresses_musicals (actress_id, musical_id) VALUES ((SELECT id FROM actresses WHERE name="Carol Channing"), (SELECT id FROM musicals WHERE title="Hello, Dolly!"));

INSERT INTO actresses_musicals (actress_id, musical_id) VALUES ((SELECT id FROM actresses WHERE name="Pearl Bailey"), (SELECT id FROM musicals WHERE title="Hello, Dolly!"));

INSERT INTO actresses_musicals (actress_id, musical_id) VALUES ((SELECT id FROM actresses WHERE name="Shirley Jones"), (SELECT id FROM musicals WHERE title="Carousel"));

INSERT INTO actresses_musicals (actress_id, musical_id) VALUES ((SELECT id FROM actresses WHERE name="Audrey Hepburn"), (SELECT id FROM musicals WHERE title="My Fair Lady"));

INSERT INTO actresses_musicals (actress_id, musical_id) VALUES ((SELECT id FROM actresses WHERE name="Julie Andrews"), (SELECT id FROM musicals WHERE title="My Fair Lady"));

INSERT INTO actresses_musicals (actress_id, musical_id) VALUES ((SELECT id FROM actresses WHERE name="Julie Andrews"), (SELECT id FROM musicals WHERE title="The Sound of Music"));


Finally, execute an SQL command to list the names of all the actresses who were ever in a play authored by Oscar Hammerstein. Note that this requires a join across all five tables in the database! Challenging, give it a try.

-- SQL COMMANDS

SELECT actresses.name, musicals.title 
FROM actresses, authors, musicals, actresses_musicals, authors_musicals 
WHERE ( (authors.name = "Oscar Hammerstein") 
AND (authors_musicals.author_id = authors.id) 
AND (musicals.id = authors_musicals.musical_id) 
AND (actresses_musicals.musical_id = musicals.id) 
AND (actresses.id = actresses_musicals.actress_id));


Record your process and observations in the activity journal.

End of Part 3 and the entire activity.
